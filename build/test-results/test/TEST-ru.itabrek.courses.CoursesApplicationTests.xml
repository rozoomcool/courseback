<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ru.itabrek.courses.CoursesApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-08-04T02:32:55" hostname="DESKTOP-69GE6SK" time="0.416">
  <properties/>
  <testcase name="contextLoads()" classname="ru.itabrek.courses.CoursesApplicationTests" time="0.416"/>
  <system-out><![CDATA[Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
05:32:48.943 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [ru.itabrek.courses.CoursesApplicationTests]: CoursesApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
05:32:49.047 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration ru.itabrek.courses.CoursesApplication for test class ru.itabrek.courses.CoursesApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

2024-08-04T05:32:49.520+03:00  INFO 15876 --- [courses] [    Test worker] r.i.courses.CoursesApplicationTests      : Starting CoursesApplicationTests using Java 21.0.1 with PID 15876 (started by User in C:\Users\User\Documents\_PROJECTS\JAVA\courseback)
2024-08-04T05:32:49.521+03:00  INFO 15876 --- [courses] [    Test worker] r.i.courses.CoursesApplicationTests      : No active profile set, falling back to 1 default profile: "default"
2024-08-04T05:32:49.746+03:00 DEBUG 15876 --- [courses] [    Test worker] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@365553de
2024-08-04T05:32:50.671+03:00  INFO 15876 --- [courses] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-04T05:32:50.817+03:00  INFO 15876 --- [courses] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 138 ms. Found 6 JPA repository interfaces.
2024-08-04T05:32:51.535+03:00  INFO 15876 --- [courses] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-04T05:32:51.593+03:00  INFO 15876 --- [courses] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-08-04T05:32:51.630+03:00  INFO 15876 --- [courses] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-04T05:32:51.828+03:00  INFO 15876 --- [courses] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-04T05:32:51.850+03:00  INFO 15876 --- [courses] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-04T05:32:51.999+03:00  INFO 15876 --- [courses] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@78829412
2024-08-04T05:32:52.001+03:00  INFO 15876 --- [courses] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-04T05:32:52.884+03:00  INFO 15876 --- [courses] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table if exists chapter_lessons 
       drop constraint if exists FK5jwsak7bk2fmf7k6osrhac9oy
Hibernate: 
    alter table if exists chapter_lessons 
       drop constraint if exists FKadynyhddj4hegy2wj9up4yarc
Hibernate: 
    alter table if exists course_chapters 
       drop constraint if exists FKojtxjn21ucs2njekvr7yq5386
Hibernate: 
    alter table if exists course_chapters 
       drop constraint if exists FK2gwo9femvx1gnsx18rpatwwo8
Hibernate: 
    alter table if exists course_participants 
       drop constraint if exists FKm16sm12uybforp9in1v8f3s28
Hibernate: 
    alter table if exists course_participants 
       drop constraint if exists FK8dvnj6ef9lwhi2xo4orhev83i
Hibernate: 
    alter table if exists lesson_lectures 
       drop constraint if exists FK8frtbgd6234dux3jkwvmtrcjp
Hibernate: 
    alter table if exists lesson_lectures 
       drop constraint if exists FK6t3mut45onedkkwhkt6n3re92
Hibernate: 
    alter table if exists lesson_tests 
       drop constraint if exists FKoce2teincnbfpgidcwdch679q
Hibernate: 
    alter table if exists lesson_tests 
       drop constraint if exists FKoaoh31qo23g1at5ui6ud0m0na
Hibernate: 
    alter table if exists lesson_test_variants 
       drop constraint if exists FK4ig81l2rua896pcf2p0gul12f
Hibernate: 
    alter table if exists lesson_test_variants 
       drop constraint if exists FKgmjic9tom61r8inbclwpmehhf
Hibernate: 
    alter table if exists "media_group_medias" 
       drop constraint if exists FK96wjey34q8m2l0c8cl9s7a1x7
Hibernate: 
    alter table if exists "media_group_medias" 
       drop constraint if exists FK3pu4sq4rnxf2tt9irdb3gsqrt
Hibernate: 
    alter table if exists user_data 
       drop constraint if exists FKr485y1dylmvsgld351w5r3m08
Hibernate: 
    drop table if exists chapter cascade
Hibernate: 
    drop table if exists chapter_lessons cascade
Hibernate: 
    drop table if exists course cascade
Hibernate: 
    drop table if exists course_chapters cascade
Hibernate: 
    drop table if exists course_participants cascade
Hibernate: 
    drop table if exists lecture cascade
Hibernate: 
    drop table if exists lesson cascade
Hibernate: 
    drop table if exists lesson_lectures cascade
Hibernate: 
    drop table if exists lesson_tests cascade
Hibernate: 
    drop table if exists lesson_test cascade
Hibernate: 
    drop table if exists lesson_test_variants cascade
Hibernate: 
    drop table if exists "media-file" cascade
Hibernate: 
    drop table if exists media_group cascade
Hibernate: 
    drop table if exists "media_group_medias" cascade
Hibernate: 
    drop table if exists question_variant cascade
Hibernate: 
    drop table if exists user_data cascade
Hibernate: 
    drop table if exists users cascade
Hibernate: 
    create table chapter (
        id bigserial not null,
        title varchar(255),
        primary key (id)
    )
Hibernate: 
    create table chapter_lessons (
        chapter_id bigint not null,
        lessons_id bigint not null unique
    )
Hibernate: 
    create table course (
        created_at timestamp(6) not null,
        id bigserial not null,
        owner_id bigint,
        updated_at timestamp(6) not null,
        complexity varchar(255) not null check (complexity in ('EASY','MEDIUM','HARD')),
        description TEXT not null,
        preview TEXT,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table course_chapters (
        chapters_id bigint not null unique,
        course_id bigint not null,
        primary key (chapters_id, course_id)
    )
Hibernate: 
    create table course_participants (
        course_id bigint not null,
        participants_id bigint not null,
        primary key (course_id, participants_id)
    )
Hibernate: 
    create table lecture (
        created_at timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6) not null,
        content TEXT not null,
        primary key (id)
    )
Hibernate: 
    create table lesson (
        created_at timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6) not null,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table lesson_lectures (
        lectures_id bigint not null unique,
        lesson_id bigint not null,
        primary key (lectures_id, lesson_id)
    )
Hibernate: 
    create table lesson_tests (
        lesson_id bigint not null,
        tests_id bigint not null unique,
        primary key (lesson_id, tests_id)
    )
Hibernate: 
    create table lesson_test (
        answer_id bigint not null,
        id bigserial not null,
        question varchar(255),
        primary key (id)
    )
Hibernate: 
    create table lesson_test_variants (
        lesson_test_id bigint not null,
        variants_id bigint not null unique,
        primary key (lesson_test_id, variants_id)
    )
Hibernate: 
    create table "media-file" (
        id bigserial not null,
        file_name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table media_group (
        id bigserial not null,
        primary key (id)
    )
Hibernate: 
    create table "media_group_medias" (
        media_group_id bigint not null,
        "medias_id" bigint not null unique
    )
Hibernate: 
    create table question_variant (
        id bigserial not null,
        variant varchar(255),
        primary key (id)
    )
Hibernate: 
    create table user_data (
        created_at timestamp(6) not null,
        date_of_birth timestamp(6),
        id bigint not null,
        updated_at timestamp(6) not null,
        firstname varchar(255),
        lastname varchar(255),
        phone varchar(255),
        primary key (id)
    )
Hibernate: 
    create table users (
        created_at timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6) not null,
        avatar TEXT,
        firstname varchar(255),
        lastname varchar(255),
        password varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','TEACHER','STUDENT')),
        surname varchar(255),
        username varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    alter table if exists chapter_lessons 
       add constraint FK5jwsak7bk2fmf7k6osrhac9oy 
       foreign key (lessons_id) 
       references lesson
Hibernate: 
    alter table if exists chapter_lessons 
       add constraint FKadynyhddj4hegy2wj9up4yarc 
       foreign key (chapter_id) 
       references chapter
Hibernate: 
    alter table if exists course_chapters 
       add constraint FKojtxjn21ucs2njekvr7yq5386 
       foreign key (chapters_id) 
       references chapter
Hibernate: 
    alter table if exists course_chapters 
       add constraint FK2gwo9femvx1gnsx18rpatwwo8 
       foreign key (course_id) 
       references course
Hibernate: 
    alter table if exists course_participants 
       add constraint FKm16sm12uybforp9in1v8f3s28 
       foreign key (participants_id) 
       references users
Hibernate: 
    alter table if exists course_participants 
       add constraint FK8dvnj6ef9lwhi2xo4orhev83i 
       foreign key (course_id) 
       references course
Hibernate: 
    alter table if exists lesson_lectures 
       add constraint FK8frtbgd6234dux3jkwvmtrcjp 
       foreign key (lectures_id) 
       references lecture
Hibernate: 
    alter table if exists lesson_lectures 
       add constraint FK6t3mut45onedkkwhkt6n3re92 
       foreign key (lesson_id) 
       references lesson
Hibernate: 
    alter table if exists lesson_tests 
       add constraint FKoce2teincnbfpgidcwdch679q 
       foreign key (tests_id) 
       references lesson_test
Hibernate: 
    alter table if exists lesson_tests 
       add constraint FKoaoh31qo23g1at5ui6ud0m0na 
       foreign key (lesson_id) 
       references lesson
Hibernate: 
    alter table if exists lesson_test_variants 
       add constraint FK4ig81l2rua896pcf2p0gul12f 
       foreign key (variants_id) 
       references question_variant
Hibernate: 
    alter table if exists lesson_test_variants 
       add constraint FKgmjic9tom61r8inbclwpmehhf 
       foreign key (lesson_test_id) 
       references lesson_test
Hibernate: 
    alter table if exists "media_group_medias" 
       add constraint FK96wjey34q8m2l0c8cl9s7a1x7 
       foreign key ("medias_id") 
       references "media-file"
Hibernate: 
    alter table if exists "media_group_medias" 
       add constraint FK3pu4sq4rnxf2tt9irdb3gsqrt 
       foreign key (media_group_id) 
       references media_group
Hibernate: 
    alter table if exists user_data 
       add constraint FKr485y1dylmvsgld351w5r3m08 
       foreign key (id) 
       references users
2024-08-04T05:32:53.030+03:00  INFO 15876 --- [courses] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-04T05:32:53.825+03:00  WARN 15876 --- [courses] [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-04T05:32:54.092+03:00 DEBUG 15876 --- [courses] [    Test worker] s.w.s.m.m.a.RequestMappingHandlerMapping : 19 mappings in 'requestMappingHandlerMapping'
2024-08-04T05:32:54.291+03:00 DEBUG 15876 --- [courses] [    Test worker] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-08-04T05:32:54.451+03:00  INFO 15876 --- [courses] [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-08-04T05:32:54.548+03:00  INFO 15876 --- [courses] [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5faa0c51, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@404d90c5, org.springframework.security.web.context.SecurityContextHolderFilter@3637e628, org.springframework.security.web.header.HeaderWriterFilter@598b15ba, org.springframework.web.filter.CorsFilter@4bd1541f, org.springframework.security.web.authentication.logout.LogoutFilter@51ce8293, ru.itabrek.courses.auth.JwtAuthFilter@36d8ddc5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@298154d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b6282bb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78f18a87, org.springframework.security.web.session.SessionManagementFilter@14abde3e, org.springframework.security.web.access.ExceptionTranslationFilter@51413d02, org.springframework.security.web.access.intercept.AuthorizationFilter@3db84bfa]
2024-08-04T05:32:54.862+03:00 DEBUG 15876 --- [courses] [    Test worker] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-08-04T05:32:54.914+03:00 DEBUG 15876 --- [courses] [    Test worker] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-08-04T05:32:55.233+03:00  INFO 15876 --- [courses] [    Test worker] r.i.courses.CoursesApplicationTests      : Started CoursesApplicationTests in 6.024 seconds (process running for 7.181)
2024-08-04T05:32:55.304+03:00  INFO 15876 --- [courses] [    Test worker] ru.itabrek.courses.auth.AuthService      : CREATE::USER CREATE PROCESS
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (avatar, created_at, firstname, lastname, password, role, surname, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user_data
        (created_at, date_of_birth, firstname, lastname, phone, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2024-08-04T05:32:55.534+03:00  INFO 15876 --- [courses] [    Test worker] ru.itabrek.courses.auth.AuthService      : CREATE::USER SUCCESSFULLY CREATED
2024-08-04T05:32:55.536+03:00  INFO 15876 --- [courses] [    Test worker] ru.itabrek.courses.auth.AuthService      : CREATE::USER CREATE PROCESS
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (avatar, created_at, firstname, lastname, password, role, surname, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user_data
        (created_at, date_of_birth, firstname, lastname, phone, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2024-08-04T05:32:55.598+03:00  INFO 15876 --- [courses] [    Test worker] ru.itabrek.courses.auth.AuthService      : CREATE::USER SUCCESSFULLY CREATED
2024-08-04T05:32:55.598+03:00  INFO 15876 --- [courses] [    Test worker] ru.itabrek.courses.auth.AuthService      : CREATE::USER CREATE PROCESS
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        users
        (avatar, created_at, firstname, lastname, password, role, surname, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user_data
        (created_at, date_of_birth, firstname, lastname, phone, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2024-08-04T05:32:55.659+03:00  INFO 15876 --- [courses] [    Test worker] ru.itabrek.courses.auth.AuthService      : CREATE::USER SUCCESSFULLY CREATED
]]></system-out>
  <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\User\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.12\be4984cb6fd1ef1d11f218a648889dfda44b8a15\byte-buddy-agent-1.14.12.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
